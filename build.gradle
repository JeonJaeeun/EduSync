plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.johnrengelman.processes' version '0.5.0'
}

group = 'org.edusync'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ============= [Spring Boot Starters] ============= //
	// 1) WEB: Spring MVC + REST
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 2) Security: 인증/인가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 3) JPA: Postgres/H2 등 SQL DB 연동
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'

	// 4) Querydsl 의존성 추가\ // Spring Boot 3.x 버전에서는 jakarta 네임스페이스를 사용
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// 5) Test: JUnit, Spring Boot 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}


// Querydsl 설정: Q 클래스 생성 및 관리

// 1. Q 클래스가 생성될 디렉토리 경로를 정의
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
// 2. main 소스 세트에 Q 클래스 디렉토리를 포함시켜, 생성된 Q 클래스들이 컴파일 대상에 포함
sourceSets {
	main.java.srcDirs += [querydslDir]
}
// 3. Java 컴파일 시, 어노테이션 프로세서가 생성한 소스 파일의 출력을 지정한 디렉토리로 설정
tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(file(querydslDir))
}
// 4. 'clean' 작업이 수행될 때, 생성된 Q 클래스 디렉토리를 삭제하여 빌드 환경을 정리
clean.doLast {
	delete querydslDir
}

// 환경 변수 처리를 위한 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}